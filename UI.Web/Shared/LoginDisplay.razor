<AuthorizeView>
    <Authorized>
        <a href="notifications" class="position-relative">
            <span class="fa-regular fa-bell bell"></span>
            @BadgeRenderFragment
        </a>

        <a href="Identity/Account/Manage" class="text-decoration-none">
            <span class="fa fa-sliders"></span>
            <span> Konto</span>
        </a>
        <form method="post" action="Identity/Account/Logout">
            <button type="submit" class="nav-link btn btn-link">
                <span class="fa-solid fa-right-from-bracket"></span>
                <span> Log out</span>
            </button>
        </form>
    </Authorized>

    <NotAuthorized>
        <a href="Identity/Account/Register">Register</a>
        <a href="Identity/Account/Login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{
    [Parameter]
    public Guid? UserId { get; set; }

    private RenderFragment BadgeRenderFragment { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        BadgeRenderFragment = @<span></span>;

        if (UserId != null)
        {
            var notificationAmount = await NotificationRepository.GetUnreadCount(UserId.Value);
            if (notificationAmount > 0)
            {
                BadgeRenderFragment = @<span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                            @notificationAmount
                        <span class="visually-hidden">unread messages</span>
                    </span>;
            }
        }
    }
}