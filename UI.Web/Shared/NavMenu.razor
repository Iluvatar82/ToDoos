@using UI.Web.Data.Extensions;
@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Awesome ToDo's</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href=@(NavigationManager.BaseUri + "administration/") Match="NavLinkMatch.All">
                        <span class="oi oi-wrench" aria-hidden="true"></span> Administration
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href=@(NavigationManager.BaseUri + "group/") Match="NavLinkMatch.All">
                <span class="oi oi-people" aria-hidden="true"></span> Meine Gruppen
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href=@NavigationManager.BaseUri Match="NavLinkMatch.All">
                <span class="oi oi-list" aria-hidden="true"></span> Meine Listen
            </NavLink>

            @foreach (var subList in allLists)
            {
                <NavLink class="nav-item nav-link nav-sub-item" href=@(NavigationManager.BaseUri + @subList.GetListUrl()) Match="NavLinkMatch.All" >
                    <span class="oi oi-@subList.GetToDoListTypeIcon() ms-3" aria-hidden="true"></span> @subList.Name
                </NavLink>
            }

            <NavLink class="nav-item nav-link nav-sub-item bg-primary bg-opacity-10" href=@(NavigationManager.BaseUri + "list/new")>
                <span class="oi oi-plus ms-3" aria-hidden="true"></span><em> Neue Liste anlegen</em>
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private List<global::ToDo.Data.ToDoData.Entities.ToDoList> allLists { get; set; } = new List<global::ToDo.Data.ToDoData.Entities.ToDoList>();

    [CascadingParameter]
    public Guid UserId { get; set; } = Guid.Empty;

    protected override async Task OnInitializedAsync()
    {
        allLists = await UserRepository.GetAllListsAsync(UserId);
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
