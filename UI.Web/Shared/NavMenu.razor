@using UI.Web.Data.Extensions;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Awesome ToDo's</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <AuthorizeView Roles="Administrator">
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href=@(NavigationManager.BaseUri + "administration/") Match="NavLinkMatch.All">
                        <i class="fa fa-wrench pe-3" aria-hidden="true"></i> Administration
                    </NavLink>

                    <NavLink class="nav-item nav-link nav-sub-item" href=@(NavigationManager.BaseUri + "administration/hangfire") Match="NavLinkMatch.All">
                        <i class="fa fa-chart-line pe-3 ms-1" aria-hidden="true"></i> Service Dashboard
                    </NavLink>

                </div>
            </Authorized>
        </AuthorizeView>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href=@(NavigationManager.BaseUri + "categories/") Match="NavLinkMatch.All">
                        <i class="fa-solid fa-cubes-stacked pe-3" aria-hidden="true"></i> Meine Kategorien
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href=@(NavigationManager.BaseUri + "group/") Match="NavLinkMatch.All">
                        <i class="fa fa-users pe-3" aria-hidden="true"></i> Meine Gruppen
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href=@NavigationManager.BaseUri Match="NavLinkMatch.All">
                        <i class="fa fa-list pe-3" aria-hidden="true"></i> Meine Listen
                    </NavLink>

                    @foreach (var subList in allLists)
                    {
                        <NavLink class="nav-item nav-link nav-sub-item" href=@(NavigationManager.BaseUri + @subList.GetListUrl()) Match="NavLinkMatch.All" >
                            <i class="fa fa-@subList.GetToDoListTypeIcon() pe-3 ms-1" aria-hidden="true"></i> @subList.Name
                        </NavLink>
                    }

                    <NavLink class="nav-item nav-link nav-sub-item bg-primary bg-opacity-10" href=@(NavigationManager.BaseUri + "list/new")>
                        <i class="fa fa-plus pe-3 ms-1" aria-hidden="true"></i><em> Neue Liste anlegen</em>
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private List<global::ToDo.Data.ToDoData.Entities.ToDoList> allLists { get; set; } = new List<global::ToDo.Data.ToDoData.Entities.ToDoList>();

    [CascadingParameter]
    public IdentityUser? User { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (User == null)
            return;

        var guidId = Guid.Parse(User.Id);
        allLists = await UserRepository.GetAllListsAsync(guidId);
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
