@page "/administration/categories/"

<h4>Kategorien</h4>

@if (Categories.Any())
{
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th scope="col">Bezeichnung</th>
                <th scope="col">Farbe</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var category in Categories)
            {
                <tr class="align-middle">
                    <td>@category.Bezeichnung</td>
                    <td class="p-0">
                        <input type="color" @bind-value=category.RGB_A class="w-100" @onblur=@(() => UpdateColor(category, category.RGB_A)) />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="form-label">Es gibt noch keine Kategorie</div>
}

<div class="row">
    <div class="btn-group col-3" role="group">
        <button @onclick="NavigateToNew" class="btn btn-outline-primary">Hinzufügen</button>
    </div>
</div>

@code {
    public IEnumerable<Category> Categories { get; set; } = new List<Category>();

    protected override async Task OnInitializedAsync()
    {
        Categories = await CategoryRepository.GetAllCategoriesAsync();
    }

    private async Task UpdateColor(Category category, string color)
    {
        category.RGB_A = color;
        await CategoryRepository.UpdateAndSaveAsync(category);
    }

    private void NavigateToNew()
    {
        NavigationManager.NavigateTo(NavigationManager.BaseUri + "administration/categories/new");
    }
}
